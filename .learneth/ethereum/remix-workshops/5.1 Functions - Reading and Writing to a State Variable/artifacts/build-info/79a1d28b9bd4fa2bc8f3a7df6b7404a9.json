{
	"id": "79a1d28b9bd4fa2bc8f3a7df6b7404a9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.3;\n\ncontract SimpleStorage {\n    // State variable to store a number\n    uint public num;\n    bool public b = true;\n    // You need to send a transaction to write to a state variable.\n    function set(uint _num) public {\n        num = _num;\n    }\n\n    function get_b() public view returns (bool)  {\n      return b;\n    }\n\n    // You can read from a state variable without sending a transaction.\n    function get() public view returns (uint) {\n        return num;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol": {
				"SimpleStorage": {
					"abi": [
						{
							"inputs": [],
							"name": "b",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_b",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "num",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_num",
									"type": "uint256"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":57:523  contract SimpleStorage {... */\n  mstore(0x40, 0x80)\n    /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":163:167  true */\n  0x01\n    /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":147:167  bool public b = true */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":57:523  contract SimpleStorage {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":57:523  contract SimpleStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4df7e3d0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4e70b1dc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x60fe47b1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6d4ce63c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf3d33cf4\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":147:167  bool public b = true */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":126:141  uint public num */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":241:299  function set(uint _num) public {... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":452:521  function get() public view returns (uint) {... */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":305:373  function get_b() public view returns (bool)  {... */\n    tag_7:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":147:167  bool public b = true */\n    tag_9:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":126:141  uint public num */\n    tag_13:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":241:299  function set(uint _num) public {... */\n    tag_19:\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":288:292  _num */\n      dup1\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":282:285  num */\n      0x00\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":282:292  num = _num */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":241:299  function set(uint _num) public {... */\n      pop\n      jump\t// out\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":452:521  function get() public view returns (uint) {... */\n    tag_21:\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":488:492  uint */\n      0x00\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":511:514  num */\n      dup1\n      sload\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":504:514  return num */\n      swap1\n      pop\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":452:521  function get() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":305:373  function get_b() public view returns (bool)  {... */\n    tag_24:\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":343:347  bool */\n      0x00\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":365:366  b */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":358:366  return b */\n      swap1\n      pop\n        /* \".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":305:373  function get_b() public view returns (bool)  {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_29:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_30:\n        /* \"#utility.yul\":184:205   */\n      tag_41\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_29\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_11:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_43\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_30\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:511   */\n    tag_31:\n        /* \"#utility.yul\":471:478   */\n      0x00\n        /* \"#utility.yul\":500:505   */\n      dup2\n        /* \"#utility.yul\":489:505   */\n      swap1\n      pop\n        /* \"#utility.yul\":434:511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":517:635   */\n    tag_32:\n        /* \"#utility.yul\":604:628   */\n      tag_46\n        /* \"#utility.yul\":622:627   */\n      dup2\n        /* \"#utility.yul\":604:628   */\n      tag_31\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":599:602   */\n      dup3\n        /* \"#utility.yul\":592:629   */\n      mstore\n        /* \"#utility.yul\":517:635   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":641:863   */\n    tag_15:\n        /* \"#utility.yul\":734:738   */\n      0x00\n        /* \"#utility.yul\":772:774   */\n      0x20\n        /* \"#utility.yul\":761:770   */\n      dup3\n        /* \"#utility.yul\":757:775   */\n      add\n        /* \"#utility.yul\":749:775   */\n      swap1\n      pop\n        /* \"#utility.yul\":785:856   */\n      tag_48\n        /* \"#utility.yul\":853:854   */\n      0x00\n        /* \"#utility.yul\":842:851   */\n      dup4\n        /* \"#utility.yul\":838:855   */\n      add\n        /* \"#utility.yul\":829:835   */\n      dup5\n        /* \"#utility.yul\":785:856   */\n      tag_32\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":641:863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":950:1067   */\n    tag_34:\n        /* \"#utility.yul\":1059:1060   */\n      0x00\n        /* \"#utility.yul\":1056:1057   */\n      dup1\n        /* \"#utility.yul\":1049:1061   */\n      revert\n        /* \"#utility.yul\":1196:1318   */\n    tag_36:\n        /* \"#utility.yul\":1269:1293   */\n      tag_53\n        /* \"#utility.yul\":1287:1292   */\n      dup2\n        /* \"#utility.yul\":1269:1293   */\n      tag_31\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1262:1267   */\n      dup2\n        /* \"#utility.yul\":1259:1294   */\n      eq\n        /* \"#utility.yul\":1249:1312   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":1308:1309   */\n      0x00\n        /* \"#utility.yul\":1305:1306   */\n      dup1\n        /* \"#utility.yul\":1298:1310   */\n      revert\n        /* \"#utility.yul\":1249:1312   */\n    tag_54:\n        /* \"#utility.yul\":1196:1318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1324:1463   */\n    tag_37:\n        /* \"#utility.yul\":1370:1375   */\n      0x00\n        /* \"#utility.yul\":1408:1414   */\n      dup2\n        /* \"#utility.yul\":1395:1415   */\n      calldataload\n        /* \"#utility.yul\":1386:1415   */\n      swap1\n      pop\n        /* \"#utility.yul\":1424:1457   */\n      tag_56\n        /* \"#utility.yul\":1451:1456   */\n      dup2\n        /* \"#utility.yul\":1424:1457   */\n      tag_36\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1324:1463   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1469:1798   */\n    tag_18:\n        /* \"#utility.yul\":1528:1534   */\n      0x00\n        /* \"#utility.yul\":1577:1579   */\n      0x20\n        /* \"#utility.yul\":1565:1574   */\n      dup3\n        /* \"#utility.yul\":1556:1563   */\n      dup5\n        /* \"#utility.yul\":1552:1575   */\n      sub\n        /* \"#utility.yul\":1548:1580   */\n      slt\n        /* \"#utility.yul\":1545:1664   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":1583:1662   */\n      tag_59\n      tag_34\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1545:1664   */\n    tag_58:\n        /* \"#utility.yul\":1703:1704   */\n      0x00\n        /* \"#utility.yul\":1728:1781   */\n      tag_60\n        /* \"#utility.yul\":1773:1780   */\n      dup5\n        /* \"#utility.yul\":1764:1770   */\n      dup3\n        /* \"#utility.yul\":1753:1762   */\n      dup6\n        /* \"#utility.yul\":1749:1771   */\n      add\n        /* \"#utility.yul\":1728:1781   */\n      tag_37\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1718:1781   */\n      swap2\n      pop\n        /* \"#utility.yul\":1674:1791   */\n      pop\n        /* \"#utility.yul\":1469:1798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c5b1de22c57859e89334c70bf7a6610a9f878acb7135fb273b6002db17822db064736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526001805f6101000a81548160ff021916908315150217905550348015610028575f80fd5b5061021d806100365f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80634df7e3d0146100595780634e70b1dc1461007757806360fe47b1146100955780636d4ce63c146100b1578063f3d33cf4146100cf575b5f80fd5b6100616100ed565b60405161006e9190610144565b60405180910390f35b61007f6100ff565b60405161008c9190610175565b60405180910390f35b6100af60048036038101906100aa91906101bc565b610104565b005b6100b961010d565b6040516100c69190610175565b60405180910390f35b6100d7610115565b6040516100e49190610144565b60405180910390f35b60015f9054906101000a900460ff1681565b5f5481565b805f8190555050565b5f8054905090565b5f60015f9054906101000a900460ff16905090565b5f8115159050919050565b61013e8161012a565b82525050565b5f6020820190506101575f830184610135565b92915050565b5f819050919050565b61016f8161015d565b82525050565b5f6020820190506101885f830184610166565b92915050565b5f80fd5b61019b8161015d565b81146101a5575f80fd5b50565b5f813590506101b681610192565b92915050565b5f602082840312156101d1576101d061018e565b5b5f6101de848285016101a8565b9150509291505056fea2646970667358221220c5b1de22c57859e89334c70bf7a6610a9f878acb7135fb273b6002db17822db064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x28 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D DUP1 PUSH2 0x36 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4DF7E3D0 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x4E70B1DC EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x60FE47B1 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xF3D33CF4 EQ PUSH2 0xCF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x1BC JUMP JUMPDEST PUSH2 0x104 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH2 0x10D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH2 0x115 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E DUP2 PUSH2 0x12A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x157 PUSH0 DUP4 ADD DUP5 PUSH2 0x135 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16F DUP2 PUSH2 0x15D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x188 PUSH0 DUP4 ADD DUP5 PUSH2 0x166 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x19B DUP2 PUSH2 0x15D JUMP JUMPDEST DUP2 EQ PUSH2 0x1A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B6 DUP2 PUSH2 0x192 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D1 JUMPI PUSH2 0x1D0 PUSH2 0x18E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE DUP5 DUP3 DUP6 ADD PUSH2 0x1A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xB1 0xDE 0x22 0xC5 PUSH25 0x59E89334C70BF7A6610A9F878ACB7135FB273B6002DB17822D 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "57:466:0:-:0;;;163:4;147:20;;;;;;;;;;;;;;;;;;;;57:466;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@b_6": {
									"entryPoint": 237,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@get_32": {
									"entryPoint": 269,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@get_b_24": {
									"entryPoint": 277,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@num_3": {
									"entryPoint": 255,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@set_16": {
									"entryPoint": 260,
									"id": 16,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1801:1",
										"nodeType": "YulBlock",
										"src": "0:1801:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "49:48:1",
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nativeSrc": "59:32:1",
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "84:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "77:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nativeSrc": "77:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "70:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nativeSrc": "70:21:1",
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "59:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31:5:1",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "41:7:1",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nativeSrc": "162:50:1",
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "179:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "199:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "184:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nativeSrc": "184:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "172:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nativeSrc": "172:34:1",
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nativeSrc": "172:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "103:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "150:5:1",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "157:3:1",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nativeSrc": "310:118:1",
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nativeSrc": "320:26:1",
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "332:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "343:2:1",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "328:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nativeSrc": "328:18:1",
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "320:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "394:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "407:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "418:1:1",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "403:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nativeSrc": "403:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "356:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nativeSrc": "356:65:1",
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nativeSrc": "356:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "218:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "282:9:1",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "294:6:1",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "305:4:1",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											},
											{
												"body": {
													"nativeSrc": "479:32:1",
													"nodeType": "YulBlock",
													"src": "479:32:1",
													"statements": [
														{
															"nativeSrc": "489:16:1",
															"nodeType": "YulAssignment",
															"src": "489:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "500:5:1",
																"nodeType": "YulIdentifier",
																"src": "500:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "489:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "489:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "434:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "461:5:1",
														"nodeType": "YulTypedName",
														"src": "461:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "471:7:1",
														"nodeType": "YulTypedName",
														"src": "471:7:1",
														"type": ""
													}
												],
												"src": "434:77:1"
											},
											{
												"body": {
													"nativeSrc": "582:53:1",
													"nodeType": "YulBlock",
													"src": "582:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "599:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "599:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "622:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "622:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "604:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "604:17:1"
																		},
																		"nativeSrc": "604:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "604:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "592:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "592:6:1"
																},
																"nativeSrc": "592:37:1",
																"nodeType": "YulFunctionCall",
																"src": "592:37:1"
															},
															"nativeSrc": "592:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "592:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "517:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:1",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "577:3:1",
														"nodeType": "YulTypedName",
														"src": "577:3:1",
														"type": ""
													}
												],
												"src": "517:118:1"
											},
											{
												"body": {
													"nativeSrc": "739:124:1",
													"nodeType": "YulBlock",
													"src": "739:124:1",
													"statements": [
														{
															"nativeSrc": "749:26:1",
															"nodeType": "YulAssignment",
															"src": "749:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "761:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "761:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "772:2:1",
																		"nodeType": "YulLiteral",
																		"src": "772:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "757:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "757:3:1"
																},
																"nativeSrc": "757:18:1",
																"nodeType": "YulFunctionCall",
																"src": "757:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "749:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "749:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "829:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "829:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "842:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "842:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "853:1:1",
																				"nodeType": "YulLiteral",
																				"src": "853:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "838:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "838:3:1"
																		},
																		"nativeSrc": "838:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "838:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "785:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "785:43:1"
																},
																"nativeSrc": "785:71:1",
																"nodeType": "YulFunctionCall",
																"src": "785:71:1"
															},
															"nativeSrc": "785:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "785:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "641:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "711:9:1",
														"nodeType": "YulTypedName",
														"src": "711:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "723:6:1",
														"nodeType": "YulTypedName",
														"src": "723:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "734:4:1",
														"nodeType": "YulTypedName",
														"src": "734:4:1",
														"type": ""
													}
												],
												"src": "641:222:1"
											},
											{
												"body": {
													"nativeSrc": "909:35:1",
													"nodeType": "YulBlock",
													"src": "909:35:1",
													"statements": [
														{
															"nativeSrc": "919:19:1",
															"nodeType": "YulAssignment",
															"src": "919:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "935:2:1",
																		"nodeType": "YulLiteral",
																		"src": "935:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "929:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "929:5:1"
																},
																"nativeSrc": "929:9:1",
																"nodeType": "YulFunctionCall",
																"src": "929:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "919:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "919:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "869:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "902:6:1",
														"nodeType": "YulTypedName",
														"src": "902:6:1",
														"type": ""
													}
												],
												"src": "869:75:1"
											},
											{
												"body": {
													"nativeSrc": "1039:28:1",
													"nodeType": "YulBlock",
													"src": "1039:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1056:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1056:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1059:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1059:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1049:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1049:6:1"
																},
																"nativeSrc": "1049:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1049:12:1"
															},
															"nativeSrc": "1049:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1049:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "950:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "950:117:1"
											},
											{
												"body": {
													"nativeSrc": "1162:28:1",
													"nodeType": "YulBlock",
													"src": "1162:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1179:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1179:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1182:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1182:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1172:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1172:6:1"
																},
																"nativeSrc": "1172:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1172:12:1"
															},
															"nativeSrc": "1172:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1172:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1073:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1073:117:1"
											},
											{
												"body": {
													"nativeSrc": "1239:79:1",
													"nodeType": "YulBlock",
													"src": "1239:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1296:16:1",
																"nodeType": "YulBlock",
																"src": "1296:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1305:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1305:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1308:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1308:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1298:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1298:6:1"
																			},
																			"nativeSrc": "1298:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1298:12:1"
																		},
																		"nativeSrc": "1298:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1298:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1262:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1262:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1287:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1287:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1269:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1269:17:1"
																				},
																				"nativeSrc": "1269:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1269:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1259:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1259:2:1"
																		},
																		"nativeSrc": "1259:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1259:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1252:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:1"
																},
																"nativeSrc": "1252:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1252:43:1"
															},
															"nativeSrc": "1249:63:1",
															"nodeType": "YulIf",
															"src": "1249:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1196:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1232:5:1",
														"nodeType": "YulTypedName",
														"src": "1232:5:1",
														"type": ""
													}
												],
												"src": "1196:122:1"
											},
											{
												"body": {
													"nativeSrc": "1376:87:1",
													"nodeType": "YulBlock",
													"src": "1376:87:1",
													"statements": [
														{
															"nativeSrc": "1386:29:1",
															"nodeType": "YulAssignment",
															"src": "1386:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1408:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1408:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1395:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1395:12:1"
																},
																"nativeSrc": "1395:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1395:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1386:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1386:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1451:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1451:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1424:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1424:26:1"
																},
																"nativeSrc": "1424:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1424:33:1"
															},
															"nativeSrc": "1424:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1424:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1324:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1354:6:1",
														"nodeType": "YulTypedName",
														"src": "1354:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1362:3:1",
														"nodeType": "YulTypedName",
														"src": "1362:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1370:5:1",
														"nodeType": "YulTypedName",
														"src": "1370:5:1",
														"type": ""
													}
												],
												"src": "1324:139:1"
											},
											{
												"body": {
													"nativeSrc": "1535:263:1",
													"nodeType": "YulBlock",
													"src": "1535:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1581:83:1",
																"nodeType": "YulBlock",
																"src": "1581:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1583:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1583:77:1"
																			},
																			"nativeSrc": "1583:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1583:79:1"
																		},
																		"nativeSrc": "1583:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1583:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1556:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1556:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1565:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1565:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1552:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1552:3:1"
																		},
																		"nativeSrc": "1552:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1552:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1577:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1577:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1548:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1548:3:1"
																},
																"nativeSrc": "1548:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1548:32:1"
															},
															"nativeSrc": "1545:119:1",
															"nodeType": "YulIf",
															"src": "1545:119:1"
														},
														{
															"nativeSrc": "1674:117:1",
															"nodeType": "YulBlock",
															"src": "1674:117:1",
															"statements": [
																{
																	"nativeSrc": "1689:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1689:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1703:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1703:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1693:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1693:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1718:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1718:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1753:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1753:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1764:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1764:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1749:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1749:3:1"
																				},
																				"nativeSrc": "1749:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1749:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1773:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1773:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1728:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1728:20:1"
																		},
																		"nativeSrc": "1728:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1728:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1718:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1718:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1469:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1505:9:1",
														"nodeType": "YulTypedName",
														"src": "1505:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1516:7:1",
														"nodeType": "YulTypedName",
														"src": "1516:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1528:6:1",
														"nodeType": "YulTypedName",
														"src": "1528:6:1",
														"type": ""
													}
												],
												"src": "1469:329:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c80634df7e3d0146100595780634e70b1dc1461007757806360fe47b1146100955780636d4ce63c146100b1578063f3d33cf4146100cf575b5f80fd5b6100616100ed565b60405161006e9190610144565b60405180910390f35b61007f6100ff565b60405161008c9190610175565b60405180910390f35b6100af60048036038101906100aa91906101bc565b610104565b005b6100b961010d565b6040516100c69190610175565b60405180910390f35b6100d7610115565b6040516100e49190610144565b60405180910390f35b60015f9054906101000a900460ff1681565b5f5481565b805f8190555050565b5f8054905090565b5f60015f9054906101000a900460ff16905090565b5f8115159050919050565b61013e8161012a565b82525050565b5f6020820190506101575f830184610135565b92915050565b5f819050919050565b61016f8161015d565b82525050565b5f6020820190506101885f830184610166565b92915050565b5f80fd5b61019b8161015d565b81146101a5575f80fd5b50565b5f813590506101b681610192565b92915050565b5f602082840312156101d1576101d061018e565b5b5f6101de848285016101a8565b9150509291505056fea2646970667358221220c5b1de22c57859e89334c70bf7a6610a9f878acb7135fb273b6002db17822db064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4DF7E3D0 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x4E70B1DC EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x60FE47B1 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xF3D33CF4 EQ PUSH2 0xCF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x1BC JUMP JUMPDEST PUSH2 0x104 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH2 0x10D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH2 0x115 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E DUP2 PUSH2 0x12A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x157 PUSH0 DUP4 ADD DUP5 PUSH2 0x135 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16F DUP2 PUSH2 0x15D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x188 PUSH0 DUP4 ADD DUP5 PUSH2 0x166 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x19B DUP2 PUSH2 0x15D JUMP JUMPDEST DUP2 EQ PUSH2 0x1A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B6 DUP2 PUSH2 0x192 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D1 JUMPI PUSH2 0x1D0 PUSH2 0x18E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE DUP5 DUP3 DUP6 ADD PUSH2 0x1A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xB1 0xDE 0x22 0xC5 PUSH25 0x59E89334C70BF7A6610A9F878ACB7135FB273B6002DB17822D 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "57:466:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;147:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;126:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;241:58;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;452:69;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;305:68;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;147:20;;;;;;;;;;;;;:::o;126:15::-;;;;:::o;241:58::-;288:4;282:3;:10;;;;241:58;:::o;452:69::-;488:4;511:3;;504:10;;452:69;:::o;305:68::-;343:4;365:1;;;;;;;;;;;358:8;;305:68;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:77::-;471:7;500:5;489:16;;434:77;;;:::o;517:118::-;604:24;622:5;604:24;:::i;:::-;599:3;592:37;517:118;;:::o;641:222::-;734:4;772:2;761:9;757:18;749:26;;785:71;853:1;842:9;838:17;829:6;785:71;:::i;:::-;641:222;;;;:::o;950:117::-;1059:1;1056;1049:12;1196:122;1269:24;1287:5;1269:24;:::i;:::-;1262:5;1259:35;1249:63;;1308:1;1305;1298:12;1249:63;1196:122;:::o;1324:139::-;1370:5;1408:6;1395:20;1386:29;;1424:33;1451:5;1424:33;:::i;:::-;1324:139;;;;:::o;1469:329::-;1528:6;1577:2;1565:9;1556:7;1552:23;1548:32;1545:119;;;1583:79;;:::i;:::-;1545:119;1703:1;1728:53;1773:7;1764:6;1753:9;1749:22;1728:53;:::i;:::-;1718:63;;1674:117;1469:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "108200",
								"executionCost": "24417",
								"totalCost": "132617"
							},
							"external": {
								"b()": "2444",
								"get()": "2476",
								"get_b()": "2539",
								"num()": "2424",
								"set(uint256)": "22536"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 523,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 523,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 523,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 163,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 147,
									"end": 167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 147,
									"end": 167,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 147,
									"end": 167,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 147,
									"end": 167,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 523,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 523,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 523,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 523,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 523,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 523,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 523,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 523,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 523,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 523,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 523,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 523,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 523,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 523,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 523,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 523,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 523,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 523,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c5b1de22c57859e89334c70bf7a6610a9f878acb7135fb273b6002db17822db064736f6c63430008180033",
									".code": [
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "4DF7E3D0"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "4E70B1DC"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "60FE47B1"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "6D4CE63C"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "F3D33CF4"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 147,
											"end": 167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 147,
											"end": 167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 126,
											"end": 141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 126,
											"end": 141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 241,
											"end": 299,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 241,
											"end": 299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 241,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 241,
											"end": 299,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 299,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 241,
											"end": 299,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 241,
											"end": 299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 241,
											"end": 299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 241,
											"end": 299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 241,
											"end": 299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 241,
											"end": 299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 241,
											"end": 299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 241,
											"end": 299,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 241,
											"end": 299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 241,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 241,
											"end": 299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 241,
											"end": 299,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 241,
											"end": 299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 241,
											"end": 299,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 452,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 452,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 452,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 452,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 452,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 452,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 452,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 452,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 452,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 452,
											"end": 521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 452,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 452,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 452,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 452,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 452,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 452,
											"end": 521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 452,
											"end": 521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 452,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 521,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 305,
											"end": 373,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 305,
											"end": 373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 305,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 305,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 305,
											"end": 373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 305,
											"end": 373,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 305,
											"end": 373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 305,
											"end": 373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 305,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 305,
											"end": 373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 305,
											"end": 373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 305,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 305,
											"end": 373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 305,
											"end": 373,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 305,
											"end": 373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 305,
											"end": 373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 305,
											"end": 373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 305,
											"end": 373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 305,
											"end": 373,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 305,
											"end": 373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 305,
											"end": 373,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 147,
											"end": 167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 241,
											"end": 299,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 241,
											"end": 299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 288,
											"end": 292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 282,
											"end": 285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 282,
											"end": 292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 282,
											"end": 292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 282,
											"end": 292,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 282,
											"end": 292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 241,
											"end": 299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 241,
											"end": 299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 452,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 452,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 488,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 511,
											"end": 514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 504,
											"end": 514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 504,
											"end": 514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 452,
											"end": 521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 305,
											"end": 373,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 305,
											"end": 373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 343,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 366,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 365,
											"end": 366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 365,
											"end": 366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 366,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 365,
											"end": 366,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 365,
											"end": 366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 366,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 365,
											"end": 366,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 365,
											"end": 366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 358,
											"end": 366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 358,
											"end": 366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 305,
											"end": 373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 305,
											"end": 373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 511,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 434,
											"end": 511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 471,
											"end": 478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 489,
											"end": 505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 489,
											"end": 505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 511,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 517,
											"end": 635,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 517,
											"end": 635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 604,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 622,
											"end": 627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 604,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 604,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 604,
											"end": 628,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 604,
											"end": 628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 599,
											"end": 602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 592,
											"end": 629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 517,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 517,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 517,
											"end": 635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 641,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 734,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 757,
											"end": 775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 749,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 749,
											"end": 775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 785,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 851,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 838,
											"end": 855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 829,
											"end": 835,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 785,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 785,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 785,
											"end": 856,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 785,
											"end": 856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 863,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 641,
											"end": 863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 950,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1061,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1318,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1196,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1269,
											"end": 1293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1293,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1269,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1294,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1249,
											"end": 1312,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1310,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1312,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1249,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1463,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1324,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1415,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 1415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 1415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1451,
											"end": 1456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1424,
											"end": 1457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1457,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1424,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1463,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1798,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1469,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1565,
											"end": 1574,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1563,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1575,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1548,
											"end": 1580,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1583,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1583,
											"end": 1662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1662,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1583,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1545,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1762,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1728,
											"end": 1781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1781,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1728,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1798,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"b()": "4df7e3d0",
							"get()": "6d4ce63c",
							"get_b()": "f3d33cf4",
							"num()": "4e70b1dc",
							"set(uint256)": "60fe47b1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"b\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_b\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"num\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":\"SimpleStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol\":{\"keccak256\":\"0x542a16c3250ec071c72b5ac80496201e33a0c2e2fcb79e64cb480d9dc4f35b7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc44e0c20ff6d6fe19f64bf265d454e0c4c37e7703ef1e598a5c4674cd496956\",\"dweb:/ipfs/QmWC9cdmvXqEwE6L9dGJv2TXvsgQmYRgLYza7S2Cx2BKq4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": ".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol:SimpleStorage",
								"label": "num",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 6,
								"contract": ".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol:SimpleStorage",
								"label": "b",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol": {
				"ast": {
					"absolutePath": ".learneth/ethereum/remix-workshops/5.1 Functions - Reading and Writing to a State Variable/readAndWrite.sol",
					"exportedSymbols": {
						"SimpleStorage": [
							33
						]
					},
					"id": 34,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimpleStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 33,
							"linearizedBaseContracts": [
								33
							],
							"name": "SimpleStorage",
							"nameLocation": "66:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "4e70b1dc",
									"id": 3,
									"mutability": "mutable",
									"name": "num",
									"nameLocation": "138:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 33,
									"src": "126:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "126:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4df7e3d0",
									"id": 6,
									"mutability": "mutable",
									"name": "b",
									"nameLocation": "159:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 33,
									"src": "147:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 4,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "147:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "163:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "272:27:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "282:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 12,
														"name": "_num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "288:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "282:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "282:10:0"
											}
										]
									},
									"functionSelector": "60fe47b1",
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "250:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "_num",
												"nameLocation": "259:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "254:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:11:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:0:0"
									},
									"scope": 33,
									"src": "241:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "350:23:0",
										"statements": [
											{
												"expression": {
													"id": 21,
													"name": "b",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "365:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 20,
												"id": 22,
												"nodeType": "Return",
												"src": "358:8:0"
											}
										]
									},
									"functionSelector": "f3d33cf4",
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_b",
									"nameLocation": "314:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "319:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "343:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 18,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "343:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:6:0"
									},
									"scope": 33,
									"src": "305:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "494:27:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "num",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "511:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "504:10:0"
											}
										]
									},
									"functionSelector": "6d4ce63c",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "461:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "464:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "488:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "488:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "487:6:0"
									},
									"scope": 33,
									"src": "452:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 34,
							"src": "57:466:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:491:0"
				},
				"id": 0
			}
		}
	}
}